{"architecture":"amd64","config":{"Env":["PATH=/opt/miniconda-py39_4.12.0/bin:/opt/dcm2niix-v1.0.20220720/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin","CONDA_DIR=/opt/miniconda-py39_4.12.0"],"Entrypoint":["heudiconv"],"OnBuild":null},"created":"2023-12-08T23:22:28.092970965Z","history":[{"created":"2023-11-21T05:21:46.219819276Z","created_by":"/bin/sh -c #(nop) ADD file:71543995e4d314b0c86da5ddf8e0cb74649767d30b3e5b6261360de354f0567b in / "},{"created":"2023-11-21T05:21:46.828934403Z","created_by":"/bin/sh -c #(nop)  CMD [\"bash\"]","empty_layer":true},{"created":"2023-11-21T09:02:18.07126364Z","created_by":"/bin/sh -c set -x \t\u0026\u0026 apt-get update \t\u0026\u0026 { \t\twhich gpg \t\t|| apt-get install -y --no-install-recommends gnupg \t; } \t\u0026\u0026 { \t\tgpg --version | grep -q '^gpg (GnuPG) 1\\.' \t\t|| apt-get install -y --no-install-recommends dirmngr \t; } \t\u0026\u0026 rm -rf /var/lib/apt/lists/*"},{"created":"2023-11-21T09:02:19.761943849Z","created_by":"/bin/sh -c set -x \t\u0026\u0026 export GNUPGHOME=\"$(mktemp -d)\" \t\u0026\u0026 gpg --batch --keyserver keyserver.ubuntu.com --recv-keys DD95CC430502E37EF840ACEEA5D32F012649A5A9 \t\u0026\u0026 gpg --batch --export DD95CC430502E37EF840ACEEA5D32F012649A5A9 \u003e /etc/apt/trusted.gpg.d/neurodebian.gpg \t\u0026\u0026 rm -rf \"$GNUPGHOME\" \t\u0026\u0026 apt-key list | grep neurodebian"},{"created":"2023-11-21T09:02:20.236545745Z","created_by":"/bin/sh -c { \techo 'deb http://neuro.debian.net/debian bullseye main'; \techo 'deb http://neuro.debian.net/debian data main'; \techo '#deb-src http://neuro.debian.net/debian-devel bullseye main'; } \u003e /etc/apt/sources.list.d/neurodebian.sources.list"},{"created":"2023-11-21T09:02:23.583387026Z","created_by":"/bin/sh -c set -x \t\u0026\u0026 apt-get update \t\u0026\u0026 apt-get install -y --no-install-recommends neurodebian-freeze eatmydata \t\u0026\u0026 ln -s /usr/bin/eatmydata /usr/local/bin/apt-get \t\u0026\u0026 rm -rf /var/lib/apt/lists/*"},{"created":"2023-12-08T23:09:59.741233773Z","created_by":"ENV PATH=/opt/dcm2niix-v1.0.20220720/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin","comment":"buildkit.dockerfile.v0","empty_layer":true},{"created":"2023-12-08T23:09:59.741233773Z","created_by":"RUN /bin/sh -c apt-get update -qq     \u0026\u0026 apt-get install -y -q --no-install-recommends            ca-certificates            cmake            g++            gcc            git            make            pigz            zlib1g-dev     \u0026\u0026 rm -rf /var/lib/apt/lists/*     \u0026\u0026 git clone https://github.com/rordenlab/dcm2niix /tmp/dcm2niix     \u0026\u0026 cd /tmp/dcm2niix     \u0026\u0026 git fetch --tags     \u0026\u0026 git checkout v1.0.20220720     \u0026\u0026 mkdir /tmp/dcm2niix/build     \u0026\u0026 cd /tmp/dcm2niix/build     \u0026\u0026 cmake  -DCMAKE_INSTALL_PREFIX:PATH=/opt/dcm2niix-v1.0.20220720 ..     \u0026\u0026 make -j1     \u0026\u0026 make install     \u0026\u0026 rm -rf /tmp/dcm2niix # buildkit","comment":"buildkit.dockerfile.v0"},{"created":"2023-12-08T23:10:04.641090644Z","created_by":"RUN /bin/sh -c apt-get update -qq            \u0026\u0026 apt-get install -y -q --no-install-recommends                   gcc                   git                   git-annex-standalone                   libc-dev                   liblzma-dev                   netbase                   pigz            \u0026\u0026 rm -rf /var/lib/apt/lists/* # buildkit","comment":"buildkit.dockerfile.v0"},{"created":"2023-12-08T23:10:04.785475685Z","created_by":"COPY . /src/heudiconv # buildkit","comment":"buildkit.dockerfile.v0"},{"created":"2023-12-08T23:10:04.785475685Z","created_by":"ENV CONDA_DIR=/opt/miniconda-py39_4.12.0 PATH=/opt/miniconda-py39_4.12.0/bin:/opt/dcm2niix-v1.0.20220720/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin","comment":"buildkit.dockerfile.v0","empty_layer":true},{"created":"2023-12-08T23:22:27.800652591Z","created_by":"RUN /bin/sh -c apt-get update -qq     \u0026\u0026 apt-get install -y -q --no-install-recommends            bzip2            ca-certificates            curl     \u0026\u0026 rm -rf /var/lib/apt/lists/*     \u0026\u0026 export PATH=\"/opt/miniconda-py39_4.12.0/bin:$PATH\"     \u0026\u0026 echo \"Downloading Miniconda installer ...\"     \u0026\u0026 conda_installer=\"/tmp/miniconda.sh\"     \u0026\u0026 curl -fsSL -o \"$conda_installer\" https://repo.continuum.io/miniconda/Miniconda3-py39_4.12.0-Linux-x86_64.sh     \u0026\u0026 bash \"$conda_installer\" -b -p /opt/miniconda-py39_4.12.0     \u0026\u0026 rm -f \"$conda_installer\"     \u0026\u0026 conda config --system --prepend channels conda-forge     \u0026\u0026 conda config --set channel_priority strict     \u0026\u0026 conda config --system --set auto_update_conda false     \u0026\u0026 conda config --system --set show_channel_urls true     \u0026\u0026 conda init bash     \u0026\u0026 conda install -y  --name base            \"python=3.9\"            \"traits\u003e=4.6.0\"            \"scipy\"            \"numpy\"            \"nomkl\"            \"pandas\"     \u0026\u0026 bash -c \"source activate base     \u0026\u0026   python -m pip install --no-cache-dir --editable              \"/src/heudiconv[all]\"\"     \u0026\u0026 sync \u0026\u0026 conda clean --all --yes \u0026\u0026 sync     \u0026\u0026 rm -rf ~/.cache/pip/* # buildkit","comment":"buildkit.dockerfile.v0"},{"created":"2023-12-08T23:22:27.800652591Z","created_by":"ENTRYPOINT [\"heudiconv\"]","comment":"buildkit.dockerfile.v0","empty_layer":true},{"created":"2023-12-08T23:22:28.092970965Z","created_by":"RUN /bin/sh -c printf '{   \"pkg_manager\": \"apt\",   \"existing_users\": [     \"root\"   ],   \"instructions\": [     {       \"name\": \"from_\",       \"kwds\": {         \"base_image\": \"neurodebian:bullseye\"       }     },     {       \"name\": \"env\",       \"kwds\": {         \"PATH\": \"/opt/dcm2niix-v1.0.20220720/bin:$PATH\"       }     },     {       \"name\": \"run\",       \"kwds\": {         \"command\": \"apt-get update -qq\\\\napt-get install -y -q --no-install-recommends \\\\\\\\\\\\n    ca-certificates \\\\\\\\\\\\n    cmake \\\\\\\\\\\\n    g++ \\\\\\\\\\\\n    gcc \\\\\\\\\\\\n    git \\\\\\\\\\\\n    make \\\\\\\\\\\\n    pigz \\\\\\\\\\\\n    zlib1g-dev\\\\nrm -rf /var/lib/apt/lists/*\\\\ngit clone https://github.com/rordenlab/dcm2niix /tmp/dcm2niix\\\\ncd /tmp/dcm2niix\\\\ngit fetch --tags\\\\ngit checkout v1.0.20220720\\\\nmkdir /tmp/dcm2niix/build\\\\ncd /tmp/dcm2niix/build\\\\ncmake  -DCMAKE_INSTALL_PREFIX:PATH=/opt/dcm2niix-v1.0.20220720 ..\\\\nmake -j1\\\\nmake install\\\\nrm -rf /tmp/dcm2niix\"       }     },     {       \"name\": \"install\",       \"kwds\": {         \"pkgs\": [           \"git\",           \"gcc\",           \"pigz\",           \"liblzma-dev\",           \"libc-dev\",           \"git-annex-standalone\",           \"netbase\"         ],         \"opts\": null       }     },     {       \"name\": \"run\",       \"kwds\": {         \"command\": \"apt-get update -qq \\\\\\\\\\\\n    \u0026\u0026 apt-get install -y -q --no-install-recommends \\\\\\\\\\\\n           gcc \\\\\\\\\\\\n           git \\\\\\\\\\\\n           git-annex-standalone \\\\\\\\\\\\n           libc-dev \\\\\\\\\\\\n           liblzma-dev \\\\\\\\\\\\n           netbase \\\\\\\\\\\\n           pigz \\\\\\\\\\\\n    \u0026\u0026 rm -rf /var/lib/apt/lists/*\"       }     },     {       \"name\": \"copy\",       \"kwds\": {         \"source\": [           \".\",           \"/src/heudiconv\"         ],         \"destination\": \"/src/heudiconv\"       }     },     {       \"name\": \"env\",       \"kwds\": {         \"CONDA_DIR\": \"/opt/miniconda-py39_4.12.0\",         \"PATH\": \"/opt/miniconda-py39_4.12.0/bin:$PATH\"       }     },     {       \"name\": \"run\",       \"kwds\": {         \"command\": \"apt-get update -qq\\\\napt-get install -y -q --no-install-recommends \\\\\\\\\\\\n    bzip2 \\\\\\\\\\\\n    ca-certificates \\\\\\\\\\\\n    curl\\\\nrm -rf /var/lib/apt/lists/*\\\\n# Install dependencies.\\\\nexport PATH=\\\\\"/opt/miniconda-py39_4.12.0/bin:$PATH\\\\\"\\\\necho \\\\\"Downloading Miniconda installer ...\\\\\"\\\\nconda_installer=\\\\\"/tmp/miniconda.sh\\\\\"\\\\ncurl -fsSL -o \\\\\"$conda_installer\\\\\" https://repo.continuum.io/miniconda/Miniconda3-py39_4.12.0-Linux-x86_64.sh\\\\nbash \\\\\"$conda_installer\\\\\" -b -p /opt/miniconda-py39_4.12.0\\\\nrm -f \\\\\"$conda_installer\\\\\"\\\\n# Prefer packages in conda-forge\\\\nconda config --system --prepend channels conda-forge\\\\n# Packages in lower-priority channels not considered if a package with the same\\\\n# name exists in a higher priority channel. Can dramatically speed up installations.\\\\n# Conda recommends this as a default\\\\n# https://docs.conda.io/projects/conda/en/latest/user-guide/tasks/manage-channels.html\\\\nconda config --set channel_priority strict\\\\nconda config --system --set auto_update_conda false\\\\nconda config --system --set show_channel_urls true\\\\n# Enable `conda activate`\\\\nconda init bash\\\\nconda install -y  --name base \\\\\\\\\\\\n    \\\\\"python=3.9\\\\\" \\\\\\\\\\\\n    \\\\\"traits\u003e=4.6.0\\\\\" \\\\\\\\\\\\n    \\\\\"scipy\\\\\" \\\\\\\\\\\\n    \\\\\"numpy\\\\\" \\\\\\\\\\\\n    \\\\\"nomkl\\\\\" \\\\\\\\\\\\n    \\\\\"pandas\\\\\"\\\\nbash -c \\\\\"source activate base\\\\n  python -m pip install --no-cache-dir --editable \\\\\\\\\\\\n      \\\\\"/src/heudiconv[all]\\\\\"\\\\\"\\\\n# Clean up\\\\nsync \u0026\u0026 conda clean --all --yes \u0026\u0026 sync\\\\nrm -rf ~/.cache/pip/*\"       }     },     {       \"name\": \"entrypoint\",       \"kwds\": {         \"args\": [           \"heudiconv\"         ]       }     }   ] }' \u003e /.reproenv.json # buildkit","comment":"buildkit.dockerfile.v0"}],"os":"linux","rootfs":{"type":"layers","diff_ids":["sha256:035fbe036b9a492c965a97ee249d9f9b0a4ebc8398a3b19669d5010fc19bd73a","sha256:4fde31732a0d4344182bc5f8534dbb8c5506b6f8cb910c36e165086a4683c035","sha256:51317691918e21ce995436e231cfc416ff9192615e5a1b40b995ebd938e14720","sha256:974218b73b2c207bfe25c35b053e4b8830254a547d05e745b31cba26b4cdd7b9","sha256:37ce6508e8e1376eaecdda0707883343759a5c3169331351a53af5d9bd414386","sha256:f833e8d3c359858bef6812ec88af4bf27b9acedf7ff2c32060dbffec993c13ac","sha256:60c2382cbc117687432ec45bf27fee541aab441a646c2c10dc5cf528fcc2f173","sha256:05800dc8d459d2221129241f4081ced05aff375fd8e30dff7e7818c16fe48fa7","sha256:2b667c2b94c67e93a102ca90097405a86b2bab3622fdc3c427e1f4e418388b8a","sha256:1575c1b675f4d36be710e117e2f2fd150d8cb8f5f504e89ad107e4ae0c2af569"]}}